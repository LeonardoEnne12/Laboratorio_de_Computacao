module MemInstr  (clk,PC,Instr);		// HIBRIDAS
	input clk;
	input [31:0]PC;
	output [31:0]Instr;
	
	reg [31:0] mem [21:0];
	integer controle =0;
	
	always @ (posedge clk) begin
		if (controle ==0) begin
		
		mem[1]	= 32'b10010010100000000111011000000001;									//mov							mem  [1] = 32'b10010010100000000011000000000000;									//mem [1]  = 32'b10010010100000000111000000010100;	// MOV
		mem[2]	= 32'b10010100000000000111000000000100;														//str							mem  [2] = 32'b10010010100000000000000000000011;									//mem [2]  = 32'b10010010100000001000000000001111;	// MOV
		mem[3]	= 32'b10010100000100001000000000000100;														//ldr							mem  [3] = 32'b10010010100000000001000000000001;									//mem [3]  = 32'b10010000000010001001000000000111;	// ADD
		mem[4]	= 32'b10010000110101110000000000001000	;													//teq							mem  [4] = 32'b10010010100000000010000000000001;									//mem [4]  = 32'b10010100000000001001000000000100;	// STR
		mem[5]	= 32'b00001010000000000000000000000001	;													//bleq						mem  [5] = 32'b10010010100000000100000000010100;									//mem [5]  = 32'b10011010000000000000000000000001;   // BL 1 + PC + 2 = 8 
		mem[6]	= 32'b10010010100000000001000101000001	;													//asr							
		
		mem[8]	= 32'b10010010100000000000000000000100	;													//mov							mem  [6] = 32'b10010000110001000000000000000000;									//mem [6]  = 32'b10011000000000000000000000000101;   // B  5 + PC + 2 = 13
		mem[9]	= 32'b10010010100000000001000000010000		;												//mov							mem  [7] = 32'b00001000000000000000000000000100;									//mem [8]  = 32'b10010100000100000010000000000100;	// LDR
		mem[10]	= 32'b10010010100000000010000000000010	;													//mov						mem  [8] = 32'b10010000000000010011000000000010;									//mem [9]  = 32'b10010010001000100011000000001010;	// SUB
		mem[11]	= 32'b10010000101000000000000000000001		;												//cmp							mem  [9] = 32'b10010000100000000001000000000010;									//mem [10] = 32'b10010000100000001111000000001110;   // MOV PC,LR 
		mem[12]	= 32'b00000000001000000011000000000001	;												//subeq							mem [10] = 32'b10010000100000000010000000000011;									//mem [13] = 32'b10010100000000000011000000001000;   // STR 
		mem[13]	= 32'b10000000001000000011000000000001	;													//subgt							mem [11] = 32'b10010010000000000000000000000001;
		mem[14]	= 32'b00010000001000000011000000000001	;													//subne							mem [12] = 32'b10011001111111111111111111111000;
		mem[15]	= 32'b10010000100000000000000010000000	;													//lsl							
		mem[16]	= 32'b10010000101100000000000000000001	;													//cmp	
		mem[17]	= 32'b00000000001000000011000000000001	;													//subeq							mem [13] = 32'b10010100000000000011000000000000;
		mem[18]	= 32'b10010000001100100100000000000001	;													//subs	
		mem[19]	= 32'b00100010000001000100000000001010	;													//addpl
		mem[20]	= 32'b00110010000001000100000000001010	;													//addmi
		mem[21]	= 32'b10010000100000001111000000001110;														//mov PC lR			
		
		controle <= 1;
		end
	end
	assign Instr = mem[PC/4];
	 
endmodule